name: Deploy Infrastructure and Application
on:
  workflow_dispatch:
  #push:
  #branches:
  #- main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      
    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1  

    - name: Provision EKS cluster
      run: |
        cd my-infrastructure
        terraform init
        terraform apply -auto-approve -lock=false

    - name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/
        
    - name: Configure kubectl
      # can use also var or secret so it will be easy to change
      run: aws eks --region us-east-1 update-kubeconfig --name dsm-dev-eks

    - name: Install Argo CD CLI
      run: |
        curl -LO https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
        chmod +x argocd-linux-amd64
        sudo mv argocd-linux-amd64 /usr/local/bin/argocd

    - name: Argo CD Application Sync
      env:
        ARGOCD_USERNAME: ${{ secrets.ARGOCD_USERNAME }}
        ARGOCD_PASSWORD: ${{ secrets.ARGOCD_PASSWORD }}
        ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
      run: |
        # In real life the password will be changed and permanent
        ARGOCD_PASSWORD=$(argocd admin initial-password -n argocd)
        argocd login --insecure --grpc-web --username "$ARGOCD_USERNAME" --password "$ARGOCD_PASSWORD" "$ARGOCD_SERVER"
        kubectl apply -f argo-cd/application.yaml
        argocd app sync dsm --wait

    - name: Destroy Terraform Infrastructure
      run: |
        cd my-infrastructure
        terraform destroy -auto-approve

        

